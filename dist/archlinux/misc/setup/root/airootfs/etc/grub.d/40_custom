#!/bin/sh
exec tail -n +3 $0
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.

set dev_uuid='5bd9fcb6-9fef-4796-8076-1bd2b25c411b'

menuentry 'my ArchAssault GNU/Linux 2014.11.02 : x86_64 iso' {
	load_video
	set gfxpayload=keep
	set isofile='/iso/my-archassault-2014.11.02-dual.iso'
	set arch='x86_64'
	set isolabel='MY_ARCH_201411'
	loopback loop $isofile
	linux (loop)/arch/boot/$arch/vmlinuz archisolabel=$isolabel img_dev=/dev/disk/by-uuid/$dev_uuid img_loop=$isofile earlymodules=loop
	initrd (loop)/arch/boot/$arch/archiso.img
}

#=====================================
# @@ Installing GRUB
#    # mount /dev/sdXY /mnt
#    # mkdir /mnt/boot
#    # grub-install --target=i386-pc --recheck --boot-directory=/mnt/boot /dev/sdX
#
# @@ In case you want to boot ISOs in UEFI mode, you have to install grub for the
#    UEFI target:
#    # grub-install --target x86_64-efi --efi-directory /mnt --boot-directory=/mnt/boot --removable
# 
# /mnt/boot/grub/grub.cfg
#   path to the partition holding ISO images (using UUID)
#    set imgdevpath="/dev/disk/by-uuid/UUID_value"
# or
#    set imgdevpath="/dev/disk/by-label/label_value"
#
# The necessary UUID or label can be found using lsblk -f. To complete the
# configuration, a boot entry for each ISO image has to be added below this
# header, see the next section for examples.
#
# @@ Arch Linux
# Tip: If you want to boot into a 32-bit system, replace x86_64 with i686.
#
# @ monthly release
# menuentry '[loopback]archlinux-2014.11.01-dual.iso' {
#        set isofile='/boot/iso/archlinux-2014.11.01-dual.iso'
#        loopback loop $isofile
#        linux (loop)/arch/boot/x86_64/vmlinuz archisolabel=ARCH_201411 img_dev=$imgdevpath img_loop=$isofile earlymodules=loop
#        initrd (loop)/arch/boot/x86_64/archiso.img
# }
#
#  Note:
#
#    • The label string after archisolabel= needs to be edited when a newer,
#      monthly released ISO image is used.[1]
#    • For a complete list of archiso boot parameters, see its documentation.
#
# @ archboot
# menuentry '[loopback]archlinux-2014.09-1-archboot' {
#         set isofile='/boot/iso/archlinux-2014.09-1-archboot.iso'
#         loopback loop $isofile
#         linux (loop)/boot/vmlinuz_x86_64 iso_loop_dev=$imgdevpath iso_loop_path=$isofile
#         initrd (loop)/boot/initramfs_x86_64.img
# }
#
# @@ CentOS
#
# @ Stock installation medium
# menuentry '[loopback]CentOS-7.0-1406-x86_64-DVD' {
#         set isofile='/boot/iso/CentOS-7.0-1406-x86_64-DVD.iso'
#         loopback loop $isofile
#         linux (loop)/isolinux/vmlinuz noeject inst.stage2=hd:/dev/sdb2:/$isofile
#         initrd (loop)/isolinux/initrd.img
# }
#
#  Tip: The boot parameter inst.stage2=hd: which is used by anaconda, is similar
#       to fstab's first field(fs_spec):
#   • inst.stage2=hd:/dev/sdxY
#   • inst.stage2=hd:LABEL=MYUSBSTICK
#   • inst.stage2=hd:UUID=00000000-0000-0000-0000-0000deadbeef
#
# @ Desktop live medium
# menuentry '[loopback]CentOS-7.0-1406-x86_64-GnomeLive' {
#         set isofile='/boot/iso/CentOS-7.0-1406-x86_64-GnomeLive.iso'
#         loopback loop $isofile
#         linux (loop)/isolinux/vmlinuz0 root=live:CDLABEL=CentOS-7-live-GNOME-x86_64 iso-scan/filename=$isofile rd.live.image
#         initrd (loop)/isolinux/initrd0.img
# }
#
# @ Clonezilla Live
#  Tip: Since 2014.01.05[2], the Arch Linux monthly release contains clonezilla/drbl.
#
# menuentry "Clonezilla Live 2.2.3-25 amd64" --class iso {
#     set isofile="/boot/iso/clonezilla-live-2.2.3-25-amd64.iso"
#     loopback loop $isofile
#     linux (loop)/live/vmlinuz findiso=$isofile boot=live union=aufs config noprompt ip=frommedia toram=filesystem.squashfs
#     initrd (loop)/live/initrd.img
# }
#
# @@ Debian
#
# @ Stock install medium
#  Note: To install debian from any stock install medium on a hard disk(or usb
#        stick), it's necessary to use a different initramfs instead of the default one
#        on the installation medium(it is located at (loop)/install.amd/initrd.gz). If
#        you boot with the default one, the debian-installer will unable to find or
#        mount the proper iso image for installation. Please download the initramfs for
#        hard disk installation from an official mirror site, put it in the same
#        directory with the image file and give it a suitable name
#        (debian-7.7.0-amd64-DVD-1.hdd.initrd.gz in this example).
#
# menuentry '[loopback]debian-7.7.0-amd64-DVD-1' {
#         set isofile='/boot/iso/debian-7.7.0-amd64-DVD-1.iso'
#         set initrdfile='/boot/iso/debian-7.7.0-amd64-DVD-1.hdd.initrd.gz'
#         loopback loop $isofile
#         linux (loop)/install.amd/vmlinuz vga=791 iso-scan/ask_second_pass=true iso-scan/filename=$isofile
#         initrd $initrdfile
# }
#
# @ Live install medium
# menuentry '[loopback]debian-live-7.6.0-amd64-xfce-desktop' {
#         set isofile='/boot/iso/debian-live-7.6.0-amd64-xfce-desktop.iso'
#         loopback loop $isofile
#         linux (loop)/live/vmlinuz boot=live config fromiso=/dev/sdb2/$isofile
#         initrd (loop)/live/initrd.img
# }
#
#  Note: It's also OK to use findiso=$isofile instead of the longer fromiso=/dev/
#        disk/by-.../.../$isofile. Anyway, using fromiso= instead of findiso= may speed
#        up the initialization progress because it avoids unnecessary mounting.
#
# @@ Fedora
# 
# @ Stock installation medium
# menuentry '[loopback]Fedora-20-x86_64-DVD' {
#         set isofile='/boot/iso/Fedora-20-x86_64-DVD.iso'
#         loopback loop $isofile
#         linux (loop)/isolinux/vmlinuz noeject inst.stage2=hd:/dev/sdb2:/$isofile
#         initrd (loop)/isolinux/initrd.img
# }
# 
#  Tip: For a list of anaconda boot parameters, please see this documentation.
# 
# @ Desktop live medium
# menuentry '[loopback]Fedora-Live-Desktop-x86_64-20-1' {
#         set isofile='/boot/iso/Fedora-Live-Desktop-x86_64-20-1.iso'
#         loopback loop $isofile
#         linux (loop)/isolinux/vmlinuz0 root=live:CDLABEL=Fedora-Live-Desktop-x86_64-20-1 iso-scan/filename=$isofile rd.live.image
#         initrd (loop)/isolinux/initrd0.img
# }
# 
# @ GParted Live
# menuentry "GParted Live" {
#       set isofile="/boot/iso/gparted-live-0.18.0-1-amd64.iso"
#       loopback loop $isofile
#       linux (loop)/live/vmlinuz boot=live config union=aufs noswap noprompt ip=frommedia toram=filesystem.squashfs findiso=$isofile
#       initrd (loop)/live/initrd.img
# }
# 
# @ Kali Linux
# menuentry '[loopback]kali-linux-1.0.7-amd64' {
#         set isofile='/boot/iso/kali-linux-1.0.7-amd64.iso'
#         loopback loop $isofile
#         linux (loop)/live/vmlinuz boot=live findiso=$isofile noconfig=sudo username=root hostname=kali
#         initrd (loop)/live/initrd.img
# }
# 
# @ BackTrack
# menuentry 'BT5R2-GNOME : x86_64 iso' {
# 	load_video
# 	set gfxpayload=keep
# 	set isofile='/iso/BT5R2-GNOME-64.iso'
# 	loopback loop $isofile
# 	linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=/$isofile noeject noprompt splash --
# 	initrd (loop)/casper/initrd.gz
# }
#
# @ Linux Mint
# menuentry "[loopback]linuxmint-201403-cinnamon-dvd-32bit" {
#         set isofile="/boot/iso/linuxmint-201403-cinnamon-dvd-32bit.iso"
#         loopback loop $isofile
#         linux (loop)/live/vmlinuz isofrom=/dev/sdb2/iso/$isofile boot=live live-config live-media-path=/live quiet splash noeject noprompt
#         initrd (loop)/live/initrd.img
# }
# 
# @@ openSUSE
# 
# @ Stock installation medium
# menuentry '[loopback]openSUSE-13.1-DVD-x86_64' {
#         set isofile='/boot/iso/openSUSE-13.1-DVD-x86_64.iso'
#         loopback loop $isofile
#         linux (loop)/boot/x86_64/loader/linux install=hd:$isofile
#         initrd (loop)/boot/x86_64/loader/initrd
# }
# 
# @ LiveCD
# menuentry '[loopback]openSUSE-13.1-KDE-Live-x86_64' {
#         set isofile='/boot/iso/openSUSE-13.1-KDE-Live-x86_64.iso'
#         loopback loop $isofile
#         linux (loop)/boot/x86_64/loader/linux isofrom_device=$imgdevpath isofrom_system=$isofile LANG=en_US.UTF-8
#         initrd (loop)/boot/x86_64/loader/initrd
# }
# 
# @@ Sabayon
# menuentry '[loopback]Sabayon_Linux_14.05_amd64_KDE' {
#         set isofile='/boot/iso/Sabayon_Linux_14.05_amd64_KDE.iso'
#         loopback loop $isofile
#         linux (loop)/boot/sabayon root=/dev/ram0 aufs cdroot locale=en_US loop=/livecd.squashfs looptype=squashfs isoboot=$isofile
#         initrd (loop)/boot/sabayon.igz
# }
# 
# @@ Slackware Linux
# menuentry '[loopback]slackware64-14.1-install-dvd' {
#         set isofile='/boot/iso/slackware64-14.1-install-dvd.iso'
#         loopback loop $isofile
#         linux (loop)/kernels/huge.s/bzImage printk.time=0
#         initrd (loop)/isolinux/initrd.img
# }
# 
# @@ Ubuntu
# menuentry '[loopback]ubuntu-14.04.1-desktop-amd64' {
#         set isofile='/boot/iso/ubuntu-14.04.1-desktop-amd64.iso'
#         loopback loop $isofile 
#         linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$isofile locale=en_US.UTF-8
#         initrd (loop)/casper/initrd.lz
# }
#
# @@ Gentoo
#
# @ Pentoo
# menuentry 'Pentoo : x86_64 iso' {
# 	load_video
# 	set gfxpayload=keep
# 	set isofile='/iso/pentoo-x86_64-2012.0_beta1.7.iso'
# 	loopback loop $isofile
# 	linux (loop)/boot/pentoo root=/dev/ram0 init=/linuxrc nokeymap \
# 	    cdroot cdboot looptype=squashfs loop=/image.squashfs \
# 	    vga=791 usbcore.autosuspend=1 console=tty0 rootdelay=10 isoboot=$isofile
# 	initrd (loop)/boot/pentoo.igz
# }
